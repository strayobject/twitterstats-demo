<?php

namespace Strayobject\TwitterstatsBundle\Repository;

use DateTime;
use Strayobject\TwitterstatsBundle\Entity\Account;

/**
 * AccountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RetweetRepository extends \Doctrine\ORM\EntityRepository
{
    public function findTotalRetweetsForAccount(Account $account)
    {
        return $this
            ->getEntityManager()
            ->createQuery(
                'select sum(r.count) from StrayobjectTwitterstatsBundle:Retweet r where r.account = :account'
            )
            ->setParameter('account', $account)
            ->getSingleScalarResult()
        ;
    }

    public function findMostRecentRetweetForAccount(Account $account)
    {
        return $this
            ->getEntityManager()
            ->createQuery(
                'select r from StrayobjectTwitterstatsBundle:Retweet r where r.account = :account order by r.tweetDate desc'
            )
            ->setParameter('account', $account)
            ->setFirstResult(0)
            ->setMaxResults(1)
            ->getSingleResult()
        ;
    }

    public function findForAccountFromUntil(Account $account, DateTime $dateFrom, DateTime $dateUntil)
    {
        return $this
            ->getEntityManager()
            ->createQuery(
                '
                    select r from StrayobjectTwitterstatsBundle:Retweet r where r.account = :account
                    and r.tweetDate between :dateFrom and :dateUntil
                    order by r.tweetDate desc
                '
            )
            ->setParameters([
                'account' => $account,
                'dateFrom' => $dateFrom->format('Y-m-d H:i:s'),
                'dateUntil' => $dateUntil->format('Y-m-d H:i:s'),
            ])
            ->getResult()
        ;
    }
}
